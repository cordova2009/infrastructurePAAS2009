<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hummingbird.paas.mapper.CertificationTypeMapper" >
  <resultMap id="BaseResultMap" type="com.hummingbird.paas.entity.CertificationType" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="certification_groupname" property="certificationGroupname" jdbcType="VARCHAR" />
    <result column="certification_level" property="certificationLevel" jdbcType="INTEGER" />
    <result column="certification_name" property="certificationName" jdbcType="VARCHAR" />
    <result column="can_verify" property="canVerify" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, certification_groupname, certification_level, certification_name, can_verify
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_base_certification_type
    where id = #{id,jdbcType=INTEGER}
  </select>
   <select id="selectAllTypes" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
     <include refid="Base_Column_List" />
    from t_base_certification_type 
    where id in
    ( select certification_id 
    from t_base_industry_certification
     where industry_id = #{industry_id,jdbcType=VARCHAR})
  </select>
 <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_base_certification_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hummingbird.paas.entity.CertificationType" >
    insert into t_base_certification_type (id, certification_groupname, certification_level, 
      certification_name, can_verify)
    values (#{id,jdbcType=INTEGER}, #{certificationGroupname,jdbcType=VARCHAR}, #{certificationLevel,jdbcType=INTEGER}, 
      #{certificationName,jdbcType=VARCHAR}, #{canVerify,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hummingbird.paas.entity.CertificationType" >
    insert into t_base_certification_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="certificationGroupname != null" >
        certification_groupname,
      </if>
      <if test="certificationLevel != null" >
        certification_level,
      </if>
      <if test="certificationName != null" >
        certification_name,
      </if>
      <if test="canVerify != null" >
        can_verify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="certificationGroupname != null" >
        #{certificationGroupname,jdbcType=VARCHAR},
      </if>
      <if test="certificationLevel != null" >
        #{certificationLevel,jdbcType=INTEGER},
      </if>
      <if test="certificationName != null" >
        #{certificationName,jdbcType=VARCHAR},
      </if>
      <if test="canVerify != null" >
        #{canVerify,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hummingbird.paas.entity.CertificationType" >
    update t_base_certification_type
    <set >
      <if test="certificationGroupname != null" >
        certification_groupname = #{certificationGroupname,jdbcType=VARCHAR},
      </if>
      <if test="certificationLevel != null" >
        certification_level = #{certificationLevel,jdbcType=INTEGER},
      </if>
      <if test="certificationName != null" >
        certification_name = #{certificationName,jdbcType=VARCHAR},
      </if>
      <if test="canVerify != null" >
        can_verify = #{canVerify,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hummingbird.paas.entity.CertificationType" >
    update t_base_certification_type
    set certification_groupname = #{certificationGroupname,jdbcType=VARCHAR},
      certification_level = #{certificationLevel,jdbcType=INTEGER},
      certification_name = #{certificationName,jdbcType=VARCHAR},
      can_verify = #{canVerify,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>